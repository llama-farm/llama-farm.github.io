"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5949],{5348:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"models/index","title":"Models","description":"High-level overview of the Models system: strategy, architecture, and quick commands.","source":"@site/docs/models/index.md","sourceDirName":"models","slug":"/models","permalink":"/docs/models","draft":false,"unlisted":false,"editUrl":"https://github.com/llama-farm/llamafarm/tree/main/docs/website/docs/models/index.md","tags":[],"version":"current","frontMatter":{"title":"Models","sidebar_label":"Models","slug":"/models"},"sidebar":"tutorialSidebar","previous":{"title":"Evaluation","permalink":"/docs/prompts/evaluation"},"next":{"title":"Providers","permalink":"/docs/models/providers"}}');var i=t(4848),o=t(8453);const r={title:"Models",sidebar_label:"Models",slug:"/models"},s=void 0,l={},d=[{value:"Vision &amp; strategy",id:"vision--strategy",level:2},{value:"Architecture overview",id:"architecture-overview",level:2},{value:"Core CLI",id:"core-cli",level:2},{value:"Method selection (quick guide)",id:"method-selection-quick-guide",level:2}];function c(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"High-level overview of the Models system: strategy, architecture, and quick commands."}),"\n",(0,i.jsx)(n.h2,{id:"vision--strategy",children:"Vision & strategy"}),"\n",(0,i.jsx)(n.p,{children:"The Models system provides a config-driven, CLI-first framework for fine-tuning, managing, and deploying custom models."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Configuration-driven workflows (JSON/YAML)"}),"\n",(0,i.jsx)(n.li,{children:"Method-agnostic: LoRA, QLoRA, full fine-tune, adapters, prefix tuning"}),"\n",(0,i.jsx)(n.li,{children:"Dataset-centric: tools to create and validate datasets from your data"}),"\n",(0,i.jsx)(n.li,{children:"Production-ready: versioning, evaluation, deployment, monitoring"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"architecture-overview",children:"Architecture overview"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"models/\n\u251c\u2500\u2500 methods/              # Fine-tuning methods (lora, qlora, full_finetune, adapters, ...)\n\u251c\u2500\u2500 datasets/             # Creation, formats, quality control, augmentation\n\u251c\u2500\u2500 config_examples/      # Example configurations\n\u251c\u2500\u2500 registry/             # Model & adapter registry\n\u251c\u2500\u2500 evaluation/           # Benchmarks, metrics, QA\n\u251c\u2500\u2500 deployment/           # Production deployment configs\n\u2514\u2500\u2500 utils/                # Helpers & tests\n"})}),"\n",(0,i.jsx)(n.h2,{id:"core-cli",children:"Core CLI"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Dataset creation\nllamafarm models create-dataset --source ./rag/data --format alpaca --output ./datasets/rag_qa.json\n\n# Training\nllamafarm models train --config ./config_examples/lora_basic.json --dataset ./datasets/rag_qa.json\n\n# Evaluation\nllamafarm models evaluate --model ./trained_models/lora_v1 --benchmark hellaswag\n\n# Deployment\nllamafarm models deploy --model ./trained_models/lora_v1 --target kubernetes --replicas 2\n\n# Registry\nllamafarm models list --type adapters\nllamafarm models register --model ./trained_models/lora_v1 --name "rag_enhancement_v1"\nllamafarm models rollback --name "rag_enhancement_v1" --version "1.0.0"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"method-selection-quick-guide",children:"Method selection (quick guide)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Limited GPU memory: prefer QLoRA or LoRA"}),"\n",(0,i.jsx)(n.li,{children:"Maximum quality: full fine-tuning with large datasets"}),"\n",(0,i.jsx)(n.li,{children:"Multi-domain: adapters/registry for hot-swapping"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"See also: Providers and Adapters pages for runtime integration details."})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var a=t(6540);const i={},o=a.createContext(i);function r(e){const n=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);