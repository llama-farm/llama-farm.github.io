"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1542],{1342:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>r});const i=JSON.parse('{"id":"rag/data-sources","title":"Data sources","description":"Connecting to files, databases, and APIs.","source":"@site/docs/rag/data-sources.md","sourceDirName":"rag","slug":"/rag/data-sources","permalink":"/docs/rag/data-sources","draft":false,"unlisted":false,"editUrl":"https://github.com/llama-farm/llamafarm/tree/main/docs/website/docs/rag/data-sources.md","tags":[],"version":"current","frontMatter":{"title":"Data sources","sidebar_label":"Data sources","slug":"/rag/data-sources","toc_min_heading_level":2,"toc_max_heading_level":3},"sidebar":"tutorialSidebar","previous":{"title":"Architecture","permalink":"/docs/rag/architecture"},"next":{"title":"Stores & indexing","permalink":"/docs/rag/stores-and-indexing"}}');var c=s(4848),a=s(8453);const o={title:"Data sources",sidebar_label:"Data sources",slug:"/rag/data-sources",toc_min_heading_level:2,toc_max_heading_level:3},t=void 0,l={},r=[{value:"CSV processing",id:"csv-processing",level:2},{value:"CSV commands with sample data",id:"csv-commands-with-sample-data",level:3},{value:"Custom CSV configuration",id:"custom-csv-configuration",level:3},{value:"PDF processing",id:"pdf-processing",level:2},{value:"Single PDF",id:"single-pdf",level:3},{value:"Multiple PDFs",id:"multiple-pdfs",level:3},{value:"PDF directory",id:"pdf-directory",level:3},{value:"Page-by-page processing",id:"page-by-page-processing",level:3}];function p(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.p,{children:"Connecting to files, databases, and APIs."}),"\n",(0,c.jsx)(n.h2,{id:"csv-processing",children:"CSV processing"}),"\n",(0,c.jsx)(n.h3,{id:"csv-commands-with-sample-data",children:"CSV commands with sample data"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:'# 1. Test CSV parsing with sample data\nuv run python cli.py --config config_examples/basic_config.json \\\n  test --test-file samples/small_sample.csv\n\n# 2. Ingest CSV data using specific configuration\nuv run python cli.py --config config_examples/basic_config.json \\\n  ingest samples/small_sample.csv\n\n# 3. Search the ingested CSV data\nuv run python cli.py --config config_examples/basic_config.json \\\n  search "login problems"\n\n# 4. Check collection info\nuv run python cli.py --config config_examples/basic_config.json info\n'})}),"\n",(0,c.jsx)(n.h3,{id:"custom-csv-configuration",children:"Custom CSV configuration"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"uv run python cli.py --config config_examples/custom_csv_config.json \\\n  ingest your_custom_data.csv\n"})}),"\n",(0,c.jsx)(n.h2,{id:"pdf-processing",children:"PDF processing"}),"\n",(0,c.jsx)(n.h3,{id:"single-pdf",children:"Single PDF"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:'uv run python cli.py --config config_examples/pdf_config.json \\\n  test --test-file samples/test_document.pdf\nuv run python cli.py --config config_examples/pdf_config.json \\\n  ingest samples/test_document.pdf\nuv run python cli.py --config config_examples/pdf_config.json \\\n  search "specific topic from PDF"\n'})}),"\n",(0,c.jsx)(n.h3,{id:"multiple-pdfs",children:"Multiple PDFs"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"uv run python cli.py --config config_examples/pdf_config.json \\\n  ingest samples/document1.pdf\nuv run python cli.py --config config_examples/pdf_config.json \\\n  ingest samples/document2.pdf\nuv run python cli.py --config config_examples/pdf_config.json \\\n  ingest samples/document3.pdf\n"})}),"\n",(0,c.jsx)(n.h3,{id:"pdf-directory",children:"PDF directory"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:'for pdf in samples/pdfs/*.pdf; do\n  echo "Processing: $pdf"\n  uv run python cli.py --config config_examples/pdf_config.json ingest "$pdf"\ndone\n\nfind samples/ -name "*.pdf" -exec uv run python cli.py \\\n  --config config_examples/pdf_config.json ingest {} \\;\n'})}),"\n",(0,c.jsx)(n.h3,{id:"page-by-page-processing",children:"Page-by-page processing"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:'uv run python cli.py --config config_examples/pdf_separate_pages_config.json \\\n  ingest samples/multi_page_document.pdf\nuv run python cli.py --config config_examples/pdf_separate_pages_config.json \\\n  search "chapter introduction"\n'})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(p,{...e})}):p(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>t});var i=s(6540);const c={},a=i.createContext(c);function o(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);