"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1452],{7188:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"rag/stores-and-indexing","title":"Stores & indexing","description":"Choosing a vector store and building efficient indexes.","source":"@site/docs/rag/stores-and-indexing.md","sourceDirName":"rag","slug":"/rag/stores-and-indexing","permalink":"/docs/rag/stores-and-indexing","draft":false,"unlisted":false,"editUrl":"https://github.com/llama-farm/llamafarm/tree/main/docs/website/docs/rag/stores-and-indexing.md","tags":[],"version":"current","frontMatter":{"title":"Stores & indexing","sidebar_label":"Stores & indexing","slug":"/rag/stores-and-indexing","toc_min_heading_level":2,"toc_max_heading_level":3},"sidebar":"tutorialSidebar","previous":{"title":"Data sources","permalink":"/docs/rag/data-sources"},"next":{"title":"Retrieval strategies","permalink":"/docs/rag/retrieval-strategies"}}');var s=t(4848),r=t(8453);const a={title:"Stores & indexing",sidebar_label:"Stores & indexing",slug:"/rag/stores-and-indexing",toc_min_heading_level:2,toc_max_heading_level:3},o=void 0,l={},d=[{value:"Stores",id:"stores",level:2},{value:"Index build",id:"index-build",level:2},{value:"Maintenance",id:"maintenance",level:2},{value:"Flexible path resolution (tips)",id:"flexible-path-resolution-tips",level:3}];function c(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Choosing a vector store and building efficient indexes."}),"\n",(0,s.jsx)(n.h2,{id:"stores",children:"Stores"}),"\n",(0,s.jsx)(n.p,{children:"Chroma, FAISS, others."}),"\n",(0,s.jsx)(n.h2,{id:"index-build",children:"Index build"}),"\n",(0,s.jsx)(n.p,{children:"Chunking, embeddings, incremental updates."}),"\n",(0,s.jsx)(n.h2,{id:"maintenance",children:"Maintenance"}),"\n",(0,s.jsx)(n.p,{children:"Compaction, re-embed strategies, drift."}),"\n",(0,s.jsx)(n.h3,{id:"flexible-path-resolution-tips",children:"Flexible path resolution (tips)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Global options for CLI\n--config, -c     Configuration file path (default: rag_config.json)\n--base-dir, -b   Base directory for relative path resolution\n--log-level      Logging level (DEBUG, INFO, WARNING, ERROR)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Relative paths (resolved from current or base directory)\nuv run python cli.py ingest samples/small_sample.csv\nuv run python cli.py ingest data/tickets.csv\n\n# Absolute paths\nuv run python cli.py ingest /path/to/data/tickets.csv\n\n# Home directory expansion\nuv run python cli.py ingest ~/Documents/support_data.csv\n\n# With custom base directory\nuv run python cli.py --base-dir /project/root ingest data/tickets.csv\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Set custom base directory for all relative paths\nuv run python cli.py --base-dir /my/project/root \\\n  --config configs/prod.json \\\n  ingest data/latest_tickets.csv\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(6540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);