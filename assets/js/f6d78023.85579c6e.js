"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4545],{2697:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>u,frontMatter:()=>t,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"configuration/index","title":"Configuration","description":"Declarative YAML configuration for models, pipelines, deployment, and settings.","source":"@site/docs/configuration/index.md","sourceDirName":"configuration","slug":"/configuration","permalink":"/docs/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/llama-farm/llamafarm/tree/main/docs/website/docs/configuration/index.md","tags":[],"version":"current","frontMatter":{"title":"Configuration","sidebar_label":"Configuration","slug":"/configuration"},"sidebar":"tutorialSidebar","previous":{"title":"Adapters","permalink":"/docs/models/adapters"},"next":{"title":"Examples","permalink":"/docs/configuration/example-configs"}}');var a=i(4848),s=i(8453);const t={title:"Configuration",sidebar_label:"Configuration",slug:"/configuration"},o=void 0,r={},c=[{value:"Philosophy",id:"philosophy",level:2},{value:"Basic configuration",id:"basic-configuration",level:2},{value:"Structure",id:"structure",level:2},{value:"Models section",id:"models-section",level:2},{value:"Pipeline section",id:"pipeline-section",level:2},{value:"Deploy section",id:"deploy-section",level:2},{value:"Environment variables",id:"environment-variables",level:2},{value:"Profiles",id:"profiles",level:2},{value:"Validation",id:"validation",level:2},{value:"Best practices",id:"best-practices",level:2}];function d(e){const n={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Declarative YAML configuration for models, pipelines, deployment, and settings."}),"\n",(0,a.jsx)(n.h2,{id:"philosophy",children:"Philosophy"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Configuration over code"}),"\n",(0,a.jsx)(n.li,{children:"Sensible defaults"}),"\n",(0,a.jsx)(n.li,{children:"Progressive complexity"}),"\n",(0,a.jsx)(n.li,{children:"Environment aware"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"basic-configuration",children:"Basic configuration"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="llamafarm.yaml"',children:"models:\n  - name: assistant\n    type: llama2-7b\n\ndeploy:\n  local: true\n"})}),"\n",(0,a.jsx)(n.h2,{id:"structure",children:"Structure"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"models: [] # Model definitions\npipeline: [] # Dataflow through components\ndeploy: {} # Deployment targets\nsettings: {} # Observability, security, etc.\n"})}),"\n",(0,a.jsx)(n.h2,{id:"models-section",children:"Models section"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"models:\n  - name: local-llama\n    type: llama2-13b\n    device: cuda\n    quantization: int8\n    cache_dir: ./models\n\n  - name: cloud-gpt\n    type: openai\n    model: gpt-4\n    api_key: ${OPENAI_API_KEY}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"pipeline-section",children:"Pipeline section"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"pipeline:\n  - input: user_query\n  - generate:\n      model: local-llama\n      max_tokens: 500\n      temperature: 0.7\n  - output: response\n"})}),"\n",(0,a.jsx)(n.h2,{id:"deploy-section",children:"Deploy section"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"deploy:\n  local:\n    enable: true\n    port: 8080\n    workers: 4\n  kubernetes:\n    namespace: llamafarm\n    replicas: 3\n"})}),"\n",(0,a.jsx)(n.h2,{id:"environment-variables",children:"Environment variables"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"settings:\n  database:\n    url: ${DATABASE_URL}\n    password: ${DB_PASSWORD}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"profiles",children:"Profiles"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="llamafarm.dev.yaml"',children:"extends: llamafarm.yaml\nmodels:\n  - name: assistant\n    type: llama2-7b\n    quantization: int4\n\ndeploy:\n  local:\n    debug: true\n    hot_reload: true\n"})}),"\n",(0,a.jsx)(n.h2,{id:"validation",children:"Validation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"llamafarm validate\nllamafarm validate -f llamafarm.prod.yaml\nllamafarm config show --resolved\n"})}),"\n",(0,a.jsx)(n.h2,{id:"best-practices",children:"Best practices"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Start simple, add features incrementally"}),"\n",(0,a.jsx)(n.li,{children:"Use version control for config"}),"\n",(0,a.jsx)(n.li,{children:"Separate dev/staging/prod"}),"\n",(0,a.jsx)(n.li,{children:"Secure secrets with env vars"}),"\n",(0,a.jsx)(n.li,{children:"Enable logging and metrics"}),"\n",(0,a.jsx)(n.li,{children:"Document non-obvious choices"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"See: Example configs for complete scenarios."})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var l=i(6540);const a={},s=l.createContext(a);function t(e){const n=l.useContext(s);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);